# A list of common User-Agent strings to rotate through
USER_AGENTS = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/115.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/115.0",
]

# Context window size for AI queries
CONTEXT_SIZE = 15000

# Token limits for different types of AI calls
SHORT_PROMPT_MAX_TOKENS = 4096
LONG_PROMPT_MAX_TOKENS = 8192

# Field extraction tasks with prompts
FIELD_EXTRACTION_TASKS = [
    {"param_name": "bank_name", "prompt": "What is the name of the bank? Keep it concise - just the main bank name without lengthy descriptions or multiple banks listed."},
    {"param_name": "account_title", "prompt": "In 6 words or less, what is the title of the checking account offer? Exclude marketing terms like 'bonus offer', 'promotion', 'deal', etc. Focus on the actual account name."},
    {"param_name": "bonus_to_be_received", "prompt": "What is the HIGHEST cash bonus amount available in dollars? Look for phrases like 'up to $X', 'earn up to $X', 'get up to $X', or 'maximum $X'. If there are multiple bonus tiers, identify the maximum bonus possible. For offers that say 'up to $X', use the highest amount mentioned. Respond with ONLY a number (e.g., 300, 500.50). If not found, respond with '0'."},
    {"param_name": "initial_deposit_amount", "prompt": "What is the initial deposit amount required to open the account? Look for phrases like 'initial deposit', 'opening deposit', 'minimum opening deposit', or 'deposit to open'. This is separate from the qualifying deposit amount for the bonus. Respond with ONLY a number (e.g., 25, 100, 500). If not found, respond with '0'."},
    {"param_name": "minimum_deposit_amount", "prompt": "What is the MINIMUM qualifying direct deposit amount required to be ELIGIBLE for ANY bonus? If there are multiple tiers, use the lowest qualifying amount. Look for phrases like 'minimum deposit', 'qualifying deposit', 'required deposit', or 'deposit at least'. Respond with ONLY a number (e.g., 1000, 15000). If not found, respond with '0'."},
    {"param_name": "num_required_deposits", "prompt": "As an integer, how many separate qualifying deposits (including direct deposits) are required to earn the bonus? Extract ONLY the number (e.g., '2' from '2 deposits' or 'two deposits'). If not specified, respond with '1'."},
    {"param_name": "deal_expiration_date", "prompt": "Search the text for an offer expiration date, often phrased as 'offer ends', 'must open by', or 'valid through'. Provide the date in YYYY-MM-DD format. If no specific date is found, respond with 'N/A'."},
    {"param_name": "minimum_monthly_fee", "prompt": "What is the lowest possible monthly fee for this account, assuming all waiver conditions are met? Extract ONLY the dollar amount. If the fee can be waived to $0, respond with '0'. If there is a non-waivable fee, provide only that amount. Respond with ONLY a number."},
    {"param_name": "fee_is_conditional", "prompt": "Can the monthly fee be waived by meeting certain conditions (like minimum balance or direct deposits)? Answer only Yes or No."},
    {"param_name": "minimum_daily_balance_required", "prompt": "What is the minimum daily balance required to waive fees or qualify for the bonus? Extract ONLY the dollar amount (e.g., '1500' from '$1,500' or '1500 (checking)'). If multiple values exist, provide the most relevant one. If not found, respond with '0'."},
    {"param_name": "days_for_deposit", "prompt": "Within how many days of opening must the qualifying deposit be made? Extract ONLY the number (e.g., '60' from '60 days' or '2 months'). If not found, respond with 'N/A'."},
    {"param_name": "days_for_bonus", "prompt": "After all requirements are met, how many days until the bonus is paid to the account? Extract ONLY the number (e.g., '90' from '90 days' or '3 months'). If not found, respond with 'N/A'."},
    {"param_name": "must_be_open_for", "prompt": "For how many days must the account be kept open to avoid losing the bonus? Extract ONLY the number (e.g., '90' from '90 days' or '6 months'). If not explicitly stated, identify potential answers that could be inferred. Provide only the number. If not found, respond with 'N/A'."},
    {"param_name": "clawback_clause_present", "prompt": "Is there a clause that mentions the bank can take back the bonus if the account is closed early? Answer only Yes or No."},
    {"param_name": "clawback_details", "prompt": "If there is a clawback clause, briefly describe what triggers it (e.g., 'Close account within 6 months', 'Don't maintain minimum balance'). If no clawback clause, respond with 'N/A'."},
    {"param_name": "total_deposit_required", "prompt": "Calculate the total deposit amount required for this offer. This should be: (minimum qualifying deposit amount) Ã— (number of required deposits). For example, if $1000 is required and 2 deposits are needed, the total would be $2000. Extract ONLY the calculated total amount in dollars. Respond with ONLY a number."},
    {"param_name": "bonus_tiers", "prompt": "If there are multiple bonus tiers with different qualifying requirements, list them in format 'Tier1: $X bonus for [requirement], Tier2: $Z bonus for [requirement]'. Examples: 'Tier1: $100 bonus for 10% cash back, Tier2: $250 bonus for direct deposit'. CRITICAL: First identify the maximum total bonus amount (e.g., 'up to $X', 'earn up to $X', 'maximum $X'). Then identify ALL specific qualifying activities and their associated bonus amounts. CRITICAL: ALWAYS include a tier for the maximum possible reward. If specific activities don't add up to the maximum, create an additional tier for the remaining amount. If specific activities DO add up to the maximum, still create a tier for the maximum bonus with description 'Complete all requirements for maximum bonus'. This ensures users can always select the highest possible reward. IMPORTANT: When cash back percentages are mentioned without specific dollar limits, calculate the implied maximum by subtracting other explicit bonuses from the total maximum. For example, if there's 'up to $350' total with '$250 direct deposit' and '10% cash back', then the cash back tier should be $100 (350-250=100). If only one bonus amount, respond with 'Single tier'."},
    {"param_name": "bonus_tiers_detailed", "prompt": "Extract detailed information for each bonus tier. For each tier, provide: tier number, bonus amount, and qualifying requirement. Focus on what the user needs to DO to get the bonus. IMPORTANT: Do NOT create separate tiers for monthly rewards or recurring payments. If a bonus is paid monthly (e.g., $5/month for 12 months = $60 total), list it as ONE tier with the TOTAL amount. Use concise, action-oriented descriptions (max 60 characters) that clearly specify the EXACT actions required. Examples: 'Direct deposit $500+', '$15K deposit + maintain 90 days', 'Open both accounts + direct deposit', '$500/month x 2 months', 'Direct deposit + maintain $2K', 'Open checking + savings + direct deposit', '10% cash back on purchases', 'Make qualifying purchases', 'Deposit $1000 within 60 days', 'Set up direct deposit + maintain $1500 balance', 'Open account + 2 direct deposits $500+ each', 'Increase savings $200/month for 12 months'. CRITICAL ANALYSIS: First, identify the maximum total bonus amount mentioned (e.g., 'up to $X', 'earn up to $X', 'maximum $X'). Then identify ALL specific qualifying activities and their associated bonus amounts. CRITICAL: If the maximum bonus is higher than the sum of specific activities, you MUST create additional tiers to account for the difference. For example: If maximum is $350 but only $250 direct deposit + $100 cash back = $350, that's correct. But if maximum is $350 and only $250 direct deposit + $100 cash back = $350, AND there's no explicit third activity, create a third tier for the full $350 maximum with description 'Complete all requirements for maximum bonus'. CRITICAL: When cash back percentages are mentioned without specific dollar limits, calculate the implied maximum by subtracting other explicit bonuses from the total maximum. For example, if there's '10% cash back' and total maximum is $350 with $250 from direct deposit, the cash back tier should be $100 (350-250=100). CRITICAL: Look for ANY qualifying activities including: direct deposits, cash back, sign-up bonuses, referral bonuses, spending requirements, balance maintenance, account opening bonuses, and any other qualifying activities. CRITICAL: ALWAYS include a tier for the maximum possible reward. If you find specific activities that don't add up to the maximum, create an additional tier for the remaining amount. If the specific activities DO add up to the maximum, still create a tier for the maximum bonus with description 'Complete all requirements for maximum bonus'. This ensures users can always select the highest possible reward. CRITICAL: Be SPECIFIC about amounts, timeframes, and actions. If it says 'deposit $1000 within 60 days', use that exact requirement. If it says 'maintain $1500 balance for 90 days', include both the amount and timeframe. If it says '2 direct deposits of $500+ each', specify the count and amount. CRITICAL: NEVER use vague descriptions like 'Complete other qualifying activities', 'Meet requirements', 'Qualifying activities', or similar generic phrases. ALWAYS specify the exact action required. If you cannot find a specific action, use 'See offer details' instead of vague descriptions. Format as valid JSON array with DOUBLE QUOTES: [{\"tier\": 1, \"bonus\": 100, \"deposit\": \"10% cash back on purchases\"}, {\"tier\": 2, \"bonus\": 250, \"deposit\": \"Direct deposit $500+\"}, {\"tier\": 3, \"bonus\": 350, \"deposit\": \"Complete all requirements for maximum bonus\"}]. If single tier, respond with 'Single tier'."},
    {"param_name": "total_deposit_by_tier", "prompt": "Calculate total deposit required for each tier (deposit amount Ã— number of required deposits). Format as JSON array: [{'tier': 1, 'total_deposit': 2000}, {'tier': 2, 'total_deposit': 5000}]. If single tier, respond with 'Single tier'."},
    {"param_name": "bonus_tiers_validation", "prompt": "CRITICAL VALIDATION: Review the extracted bonus tiers and ensure ALL possible bonus amounts are captured. If the total maximum bonus is higher than the sum of extracted tiers, create additional tiers to account for the difference. For example: If maximum bonus is $350 but only $100 cash back + $200 direct deposit = $300 total, create a third tier for the remaining $50. If cash back is mentioned as a percentage without a dollar limit, calculate the implied maximum by subtracting other explicit bonuses from the total maximum. Format as valid JSON array with DOUBLE QUOTES. If the current tiers already sum to the maximum bonus, respond with 'VALID'."},
]
